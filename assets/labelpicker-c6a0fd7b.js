import{a as k,O as p,C as b,b as O,S}from"./style-3bbe4cb9.js";class B{static async UpdateLabel(e,a,f,w){const E=k(e.id,a.Id),u=parseInt(f),g=u>48?36+u/3:36,v=+w/100,I=e.grid.offset.x/e.grid.dpi/2,r=e.grid.offset.y/e.grid.dpi/2,N=u+"px Roboto",i=x(a.Name,N),l=T(a.Name,N);let n=0;const o=await p.scene.items.getItems(c=>c.attachedTo===e.id&&c.type==="TEXT"&&c.text.style.fontWeight===h(a.Direction)),m=o.find(c=>c.text.plainText===a.Name);if(m)await p.scene.items.deleteItems([m.id]);else{if(o.length>0){for(let d=0;d<o.length+1;d++)if(!o.find(y=>y.metadata[`${b.EXTENSIONID}/place`].placement===d)){n=d;break}}let c={};c[`${b.EXTENSIONID}/place`]={placement:n};const t=O().fillColor(a.Color).plainText(a.Name).fillOpacity(v).strokeWidth(1.75).strokeColor("black").strokeOpacity(1).build();t.id=E,t.type="TEXT",t.attachedTo=e.id,t.visible=!!e.visible,t.locked=!0,t.position={x:e.position.x,y:e.position.y},t.metadata=c,t.disableAttachmentBehavior=["ROTATION","SCALE"],t.text.style.fontWeight=h(a.Direction),t.text.type="PLAIN",t.text.style.fontSize=u,t.text.style.textAlign="CENTER",a.Direction=="Top"&&(t.position.y-=e.image.height*e.scale.y*r,t.position.y+=l,o.length>0&&n!==0&&(t.position.y-=g*n)),a.Direction=="Bottom"&&(t.position.y+=e.image.height/2*e.scale.y*r,t.position.x-=i,o.length>0&&n!==0&&(t.position.y+=g*n)),a.Direction=="Right"&&(t.position.x+=e.image.width/2*e.scale.x*I,t.position.y-=l/2,o.length>0&&n!==0&&(t.position.y+=g*n)),a.Direction=="Left"&&(t.position.x-=e.image.width/2*e.scale.x*I,t.position.x-=i,t.position.y-=l/2,o.length>0&&n!==0&&(t.position.y-=g*n)),await p.scene.items.addItems([t])}function h(c){switch(c){case"Top":return 601;case"Bottom":return 602;case"Right":return 603;case"Left":return 604;default:throw new Error("Invalid direction")}}function x(c,t){const s=document.createElement("canvas").getContext("2d");if(!s)throw new Error("Canvas 2D context is not supported.");return s.font=t,s.measureText(c).width}function T(c,t){const s=document.createElement("canvas").getContext("2d");if(!s)throw new Error("Canvas 2D context is not supported.");s.font=t;const y=s.measureText(c);return y.actualBoundingBoxAscent+y.actualBoundingBoxDescent}}}p.onReady(async()=>{document.documentElement.style.borderRadius="16px",document.documentElement.style.height="100%";const C=window.location.search,e=new URLSearchParams(C),a=e.get("targetid"),f=e.get("multi"),w=f?a.split(","):[];let E=[];const u=await p.scene.items.getItems(f?w:[a]);f||(E=await p.scene.items.getItems(i=>i.attachedTo===u[0].id&&i.type==="TEXT"));const g=await p.theme.getTheme();S(g,document),p.theme.onChange(i=>{S(i,document)});const r=(await p.room.getMetadata())[`${b.EXTENSIONID}/metadata_marks`]?.saveData;if(r&&r.Labels?.length>0){let i=function(t){t==="#1"?(l.style.display="",n.style.display="none",o.style.display="none"):t==="#2"?(l.style.display="none",n.style.display="",o.style.display="none"):(l.style.display="none",n.style.display="none",o.style.display="")};const l=document.querySelector("#label-list1"),n=document.querySelector("#label-list2"),o=document.querySelector("#label-list3"),m=document.createElement("button");m.className="categoryButton",m.onclick=()=>i("#1");const h=document.createElement("button");h.className="categoryButton",h.onclick=()=>i("#2");const x=document.createElement("button");x.className="categoryButton",x.onclick=()=>i("#3");const T=document.querySelector(".footered");T.appendChild(m),T.appendChild(h),T.appendChild(x),r.Groups.forEach(t=>{switch(t.Num){case"#1":m.innerText=t.Name;break;case"#2":h.innerText=t.Name;break;case"#3":x.innerText=t.Name;break;default:throw new Error("Invalid Group")}}),r.Labels.forEach(t=>{if(t.Active){const d=E.find(y=>y.text.plainText===t.Name),s=document.createElement("button");s.id=`toggle-${t.Id}`,s.className=`group1${d?" highlight":""}`,s.value=t.Name,s.title=t.Name,s.textContent=t.Name,t.Group==="#1"?l.appendChild(s):t.Group==="#2"?n.appendChild(s):o.appendChild(s)}}),document.querySelectorAll(".group1").forEach(t=>{t.addEventListener("click",async d=>await N(d.currentTarget))}),i("#1")}else document.querySelector("#label-list1").innerHTML=`
        <div>
        No labels found.
        </div>`;async function N(i){const l=i.id.substring(7),n=r.Labels.find(o=>o.Id===l);f||(i.className=i.className==="group1"?"group1 highlight":"group1"),u.forEach(async o=>{await B.UpdateLabel(o,n,r.Distance,r.Opacity)})}});
